#import libraries
from Tkinter import *
import random

def redrawAll():
	canvas.delete(ALL)
	#draw dice
	canvas.create_image(canvas.data.x1, canvas.data.y1, image = canvas.data.images[canvas.data.diceVal[1]])
	canvas.create_image(canvas.data.x1 + 100, canvas.data.y1, image = canvas.data.images[canvas.data.diceVal[2]])
	canvas.create_image(canvas.data.x1 + 200, canvas.data.y1, image = canvas.data.images[canvas.data.diceVal[3]])
	canvas.create_image(canvas.data.x1 + 300, canvas.data.y1, image = canvas.data.images[canvas.data.diceVal[4]])
	canvas.create_image(canvas.data.x1 + 400, canvas.data.y1, image = canvas.data.images[canvas.data.diceVal[5]])
	canvas.create_text(300, 155, text = "Result:")
	canvas.create_text(300, 170, text = canvas.data.sumOfDisplayedDice)
	#Instructions for how to play the game
	canvas.create_text(300, 50, text = "When youclick 'Roll The Dice', five dice will apear along witha number.")
	canvas.create_text(300, 65, text = "The number is generated by a patern based of the dice, it isn't just a random number.")
	canvas.create_text(300, 80, text = "Try to figure out what the pattern is.")
	canvas.create_text(300, 95, text = "If you cannot figure it our, click the 'Answer' button.")
	canvas.create_text(300, 110, text = "You can hit the 'Get a Hint' button and then roll the dice again for the hint if you get stuck.")
	if(canvas.data.hint_val == 1):
		canvas.create_text(300, 125, text = "HINT: Think very literaly")
	elif(canvas.data.hint_val == 2):
		canvas.create_text(300, 125, text = "HINT: The name is key")
	elif(canvas.data.hint_val == 3):
		canvas.create_text(300, 125, text = "HINT: Picture a flower")
	elif(canvas.data.hint_val == 4):
		canvas.create_text(300, 125, text = "Sorry, you are out of hints")
	else:
		pass
	if(canvas.data.answer_diplay_count == 1):
		canvas.create_text(300, 310, text = "ANSWER: On the odd numberd dice the center dot in the center of the flower, and the outside dot is the petals.")
		canvas.create_text(300, 325, text = "You then count all of the petals to get the answer.")

def close():
	#used to properly handle closing the GUI window
	quit()

def getRandName():
	canvas.data.sumOfDisplayedDice = 0
	for j in canvas.data.diceVal.keys():
		randValue = random.randrange(1,7)
		canvas.data.diceVal[j] = canvas.data.numbers[randValue]
		if(randValue == 3):
			canvas.data.sumOfDisplayedDice += 2
		elif(randValue == 5):
			canvas.data.sumOfDisplayedDice += 4

def init():
	canvas.data.numbers = {1 : "one", 2 : "two", 3 : "three", 4 : "four", 5 : "five", 6 : "six"}
	canvas.data.x1 = 100
	canvas.data.y1 = 250
	#holds the currently displayed dice's value in words. Changed by pushing the button labeled "Roll the Dice"
	#the number of elements should change as the number of dice increases
	canvas.data.diceVal = {1 : 'one', 2 : 'two', 3 : 'three', 4 : 'four', 5 : 'five'}
	canvas.data.images = {}
	canvas.data.sumOfDisplayedDice = 0
	#load each of the images contained in the dice gifs
	for i in canvas.data.numbers.values():
		canvas.data.images[i] = PhotoImage(file = i + ".gif").subsample(4, 4)
	canvas.data.hint_val = 0
	canvas.data.answer_diplay_count = 0
 
def rollDice():
	#"roll" dice whenever button referenced by the variable butt1 is pushed
	#1st select a random number and get it's text value
	getRandName()
	#redraw the screen
	redrawAll()

def hint_val_increase():
	canvas.data.hint_val += 1

def display_answer():
	canvas.data.answer_diplay_count += 1

def main():
	#the variable root holds a reference to the main window (the one that holds everything else)
	global root
	root = Tk()
	root.geometry("600x530+300+300")
	#canvas variable is a reference to the area we are displaying the dice in
	global canvas
	canvas = Canvas(root, width = 600, height = 450)
	canvas.pack()
	global frame
	#frame is a holder for our buttons
	frame = Frame(root, bg = "grey", width = 100, height = 50)
	#fill='x' is used to
	frame.pack(fill = 'x')
	#butt1 is a button that calls the function rollDice()
	butt1 = Button(frame, text = "Roll The Dice", command = rollDice)
	butt1.configure(activebackground = "grey", relief = FLAT)
	butt1.pack(fill = 'x')
	#Hint button
	hint_frame = Frame(root, bg = "grey", width = 100, height = 50)
	hint_frame.pack(fill = 'x')
	hint_button = Button(frame, text = "Get a Hint", command = hint_val_increase)
	hint_button.configure(activebackground = "grey", relief = FLAT)
	hint_button.pack(fill = 'x')
	#Answer button
	answer_frame = Frame(root, bg = "grey", width = 100, height = 50)
	answer_frame.pack(fill = 'x')
	answer_button = Button(frame, text = "Give Up and get the Answer", command = display_answer)
	answer_button.configure(activebackground = "grey", relief = FLAT)
	answer_button.pack(fill = 'x')
	#canvas.data is a data structure that holds all of our data in one place
	class Struct(): pass
	canvas.data = Struct()
	#initialize all of our different variables (which are mostly contained in canvas.data
	init()
	#add a reference to the close() function which is called whenever the red x button is pushed.
	root.protocol("WM_DELETE_WINDOW", close)
	root.wm_title("Petals Around the Rose")
	#launch the GUI
	root.mainloop()
main()